{% extends 'base-front.html.twig' %}

{% block body %}
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Create new DigitalCoins</title>
        <style>
            .error-message {
                color: red;
            }
            .valid-input {
                border-color: green;
            }
            .invalid-input {
                border-color: red;
            }
        </style>
    </head>
    <body>
    <h1>Create new DigitalCoins</h1>

    <form id="digitalCoinsForm" method="post" action="{{ path('app_digital_coins_new') }}">
        <div class="form-group">
            <label for="recentValue">Recent Value</label>
            <input type="text" id="recentValue" name="recentValue" class="form-control">
            <span id="recent-value-error" class="error-message"></span>
        </div>
        <!-- Add more form fields here -->
        <button type="submit" class="btn btn-primary">Save</button>
    </form>

    <a href="{{ path('app_digital_coins_index') }}">back to list</a>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var recentValueInput = document.getElementById('recentValue');
            var errorSpan = document.getElementById('recent-value-error');

            recentValueInput.addEventListener('input', function() {
                validateRecentValue();
            });

            function validateRecentValue() {
                var recentValue = recentValueInput.value.trim();
                if (recentValue === '') {
                    showError('The Recent Value field is required.');
                } else if (!/^\d+$/.test(recentValue)) {
                    showError('Recent Value must contain only digits.');
                } else {
                    hideError();
                }
            }

            function showError(message) {
                errorSpan.textContent = message;
                recentValueInput.classList.remove('valid-input');
                recentValueInput.classList.add('invalid-input');
            }

            function hideError() {
                errorSpan.textContent = '';
                recentValueInput.classList.remove('invalid-input');
                recentValueInput.classList.add('valid-input');
            }
        });
    </script>
    </body>
    </html>

{% endblock %}