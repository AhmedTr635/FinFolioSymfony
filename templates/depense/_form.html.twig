{# templates/depense/_form.html.twig #}

{#<!-- Include flatpickr CSS -->#}
{#<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">#}

{#{{ form_start(form, {'attr': {'id': 'expense_form'}}) }}#}
{#<div class="container" style="width: 100%; max-width: 1200px; margin: 0 auto 200px; overflow-x: hidden;">#}
{#    <div class="row">#}
{#        <div class="col-md-6 form-group">#}
{#            {{ form_label(form.type, 'Type') }}#}
{#            {{ form_widget(form.type, {'attr': {'class': 'form-control'}}) }}#}
{#        </div>#}
{#        <div class="col-md-6 form-group">#}
{#            {{ form_label(form.montant, 'Montant') }}#}
{#            {{ form_widget(form.montant, {'attr': {'class': 'form-control '}}) }}#}
{#        </div>#}
{#    </div>#}
{#    <div class="row">#}
{#        <div class="col-md-6 form-group">#}
{#            {{ form_label(form.date, 'Date') }}#}
{#            {{ form_widget(form.date, {'attr': {'class': 'form-control flatpickr'}}) }}#}
{#        </div>#}
{#    </div>#}
{#    <button type="submit" class="btn btn-primary" style="margin-top: 25px;">{{ button_label }}</button>#}
{#</div>#}

{#{{ form_end(form) }}#}

{#<!-- Include flatpickr JavaScript -->#}
{#<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>#}

{#<!-- Initialize flatpickr -->#}
{#<script>#}
{#    document.addEventListener('DOMContentLoaded', function() {#}
{#        flatpickr('.flatpickr', {#}
{#            dateFormat: 'Y-m-d', // Customize the date format as needed#}
{#        });#}
{#    });#}
{#</script>#}
{# templates/depense/_form.html.twig #}

<!-- Include flatpickr CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<style>
    .fv-sr-only{display:none}.fv-plugins-framework input::-ms-clear,.fv-plugins-framework textarea::-ms-clear{display:none;height:0;width:0}.fv-plugins-icon-container{position:relative}.fv-plugins-icon{position:absolute;right:0;text-align:center;top:0}.fv-plugins-icon--enabled{visibility:visible}.fv-plugins-icon--disabled{visibility:hidden}.fv-plugins-message-container--enabled{display:block}.fv-plugins-message-container--disabled{display:none}.fv-plugins-tooltip{max-width:256px;position:absolute;text-align:center;z-index:10000}.fv-plugins-tooltip .fv-plugins-tooltip__content{background:#000;border-radius:3px;color:#eee;padding:8px;position:relative}.fv-plugins-tooltip .fv-plugins-tooltip__content:before{border:8px solid transparent;content:"";position:absolute}.fv-plugins-tooltip--hide{display:none}.fv-plugins-tooltip--top-left{transform:translateY(-8px)}.fv-plugins-tooltip--top-left .fv-plugins-tooltip__content:before{border-top-color:#000;left:8px;top:100%}.fv-plugins-tooltip--top{transform:translateY(-8px)}.fv-plugins-tooltip--top .fv-plugins-tooltip__content:before{border-top-color:#000;left:50%;margin-left:-8px;top:100%}.fv-plugins-tooltip--top-right{transform:translateY(-8px)}.fv-plugins-tooltip--top-right .fv-plugins-tooltip__content:before{border-top-color:#000;right:8px;top:100%}.fv-plugins-tooltip--right{transform:translateX(8px)}.fv-plugins-tooltip--right .fv-plugins-tooltip__content:before{border-right-color:#000;margin-top:-8px;right:100%;top:50%}.fv-plugins-tooltip--bottom-right{transform:translateY(8px)}.fv-plugins-tooltip--bottom-right .fv-plugins-tooltip__content:before{border-bottom-color:#000;bottom:100%;right:8px}.fv-plugins-tooltip--bottom{transform:translateY(8px)}.fv-plugins-tooltip--bottom .fv-plugins-tooltip__content:before{border-bottom-color:#000;bottom:100%;left:50%;margin-left:-8px}.fv-plugins-tooltip--bottom-left{transform:translateY(8px)}.fv-plugins-tooltip--bottom-left .fv-plugins-tooltip__content:before{border-bottom-color:#000;bottom:100%;left:8px}.fv-plugins-tooltip--left{transform:translateX(-8px)}.fv-plugins-tooltip--left .fv-plugins-tooltip__content:before{border-left-color:#000;left:100%;margin-top:-8px;top:50%}.fv-plugins-tooltip-icon{cursor:pointer;pointer-events:inherit}.fv-plugins-bootstrap5 .fv-plugins-bootstrap5-row-invalid .fv-plugins-icon{color:#dc3545}.fv-plugins-bootstrap5 .fv-plugins-bootstrap5-row-valid .fv-plugins-icon{color:#198754}.fv-plugins-bootstrap5 .fv-plugins-icon{align-items:center;display:flex;justify-content:center;height:38px;width:38px}.fv-plugins-bootstrap5 .input-group~.fv-plugins-icon{z-index:3}.fv-plugins-bootstrap5 .fv-plugins-icon-input-group{right:-38px}.fv-plugins-bootstrap5 .form-floating .fv-plugins-icon{height:58px}.fv-plugins-bootstrap5 .row .fv-plugins-icon{right:12px}.fv-plugins-bootstrap5 .row .fv-plugins-icon-check{top:-7px}.fv-plugins-bootstrap5:not(.fv-plugins-bootstrap5-form-inline) label~.fv-plugins-icon{top:32px}.fv-plugins-bootstrap5:not(.fv-plugins-bootstrap5-form-inline) label~.fv-plugins-icon-check{top:25px}.fv-plugins-bootstrap5:not(.fv-plugins-bootstrap5-form-inline) label.sr-only~.fv-plugins-icon-check{top:-7px}.fv-plugins-bootstrap5.fv-plugins-bootstrap5-form-inline .fv-plugins-icon{right:calc(var(--bs-gutter-x, 1.5rem)/2)}.fv-plugins-bootstrap5 .form-select.fv-plugins-icon-input.is-valid,.fv-plugins-bootstrap5 .form-select.fv-plugins-icon-input.is-invalid,.fv-plugins-bootstrap5 .form-control.fv-plugins-icon-input.is-valid,.fv-plugins-bootstrap5 .form-control.fv-plugins-icon-input.is-invalid{background-image:none}

</style>
{#{{ form_start(form, {'attr': {'id': 'expense_form'}}) }}#}
{#<div class="container" style="width: 100%; max-width: 1200px; margin: 0 auto 200px; overflow-x: hidden;">#}
{#    <div class="row">#}
{#        <div class="col-md-6 form-group">#}
{#            {{ form_label(form.type, 'Type') }}#}
{#            {{ form_widget(form.type, {'attr': {'class': 'form-control'}}) }}#}
{#        </div>#}
{#        <div class="col-md-6 form-group">#}
{#            {{ form_label(form.montant, 'Montant') }}#}
{#            {{ form_widget(form.montant, {'attr': {'class': 'form-control'}}) }}#}
{#        </div>#}
{#    </div>#}
{#    <div class="row">#}
{#        <div class="col-md-6 form-group">#}
{#            {{ form_label(form.date, 'Date') }}#}
{#            {{ form_widget(form.date, {'attr': {'class': 'form-control flatpickr'}}) }}#}
{#        </div>#}
{#    </div>#}
{#    <button type="submit" class="btn btn-primary" style="margin-top: 25px;">{{ button_label }}</button>#}
{#</div>#}

{#{{ form_end(form) }}#}
{# _form.html.twig #}
{# templates/depense/_form.html.twig #}

{{ form_start(form, {'attr': {'id': 'expense_form', 'class': 'was-validated' ,'novalidate':'novalidate'}}) }}
<div class="container" style="max-width: 100%; width: auto;">
    <div class="row">
        <div class="col-md-6 form-group">
            {{ form_label(form.type) }}
            {{ form_widget(form.type, {'attr': {'class': 'form-control js-input'}}) }}
            {% if form_errors(form.type) %}

            <div class="error">{{ form_errors(form.type) }}</div>
            {% endif %}<!-- Display Symfony form errors -->
        </div>
        <div class="col-md-6 form-group">
            {{ form_label(form.montant, 'Montant') }}
            {{ form_widget(form.montant, {'attr': {'class': 'form-control','type':'number'}}) }}
            {% if form_errors(form.montant) %}

                <div class="error">{{ form_errors(form.montant) }}</div>
            {% endif %}
        </div>
    </div>
    <div class="row">
        <div class="col-md-8 form-group">
            {{ form_label(form.date, 'Date') }}
            {{ form_widget(form.date, {'attr': {'class': 'form-control', 'type':'date'}}) }}

        </div>
    </div>
    <button type="submit" class="btn btn-primary" style="margin-top: 25px;" >{{ button_label }}</button>
</div>

{{ form_end(form) }}


<style>
    .error-message {
        color: red;
        /* Add any additional styling you want for the error messages */
    }</style>
{#{{ form_start(form) }}#}

{#{{ form_row(form.type, {'errors': 'none'}) }}#}
{#{% if form_errors(form.type) %}#}
{#    <div class="error">{{ form_errors(form.type) }}</div>#}
{#{% endif %}#}

{#{{ form_row(form.montant, {'errors': 'none'}) }}#}
{#{% if form_errors(form.montant) %}#}
{#    <div class="error">{{ form_errors(form.montant) }}</div>#}
{#{% endif %}#}

{#{{ form_row(form.date, {'errors': 'none'}) }}#}
{#{% if form_errors(form.date) %}#}
{#    <div class="error">{{ form_errors(form.date) }}</div>#}
{#{% endif %}#}

{#    <button type="submit" class="btn btn-primary" style="margin-top: 25px;">{{ button_label }}</button>#}


{#{{ form_end(form) }}#}

{#<script>#}
{#    document.addEventListener('DOMContentLoaded', function() {#}
{#        var typeInput = document.getElementById('type');#}
{#        var amountInput = document.getElementById('montant');#}

{#        var form = document.getElementById('expense_form');#}

{#        // Ajoutez des écouteurs d'événements sur les champs du formulaire pour la validation en temps réel#}
{#        typeInput.addEventListener('input', function() {#}
{#            validateType();#}
{#        });#}

{#        amountInput.addEventListener('input', function() {#}
{#            validateAmount();#}
{#        });#}





{#        form.addEventListener('submit', function(event) {#}
{#            if (!validateForm()) {#}
{#                event.preventDefault(); // Empêche la soumission du formulaire si la validation échoue#}
{#            }#}
{#        });#}

{#        // Fonctions de validation pour chaque champ#}
{#        function validateType() {#}
{#            var typeValue = typeInput.value.trim();#}
{#            if (typeValue === '') {#}
{#                showError(typeInput, 'Merci de saisir votre type.');#}
{#                return false; // Validation échoue#}
{#            } else if (typeValue.length < 3) {#}
{#                showError(typeInput, 'Le type doit avoir au moins 3 caractères.');#}
{#                return false; // Validation échoue#}
{#            } else {#}
{#                hideError(typeInput);#}
{#                return true; // Validation réussie#}
{#            }#}
{#        }#}

{#        function validateAmount() {#}
{#            var amountValue = amountInput.value.trim();#}
{#            if (amountValue === '') {#}
{#                showError(amountInput, 'Please enter the amount.');#}
{#                return false; // Validation fails#}
{#            } else if (isNaN(amountValue) || parseFloat(amountValue) <= 0) {#}
{#                showError(amountInput, 'Amount must be a positive number.');#}
{#                return false; // Validation fails#}
{#            } else {#}
{#                hideError(amountInput);#}
{#                return true; // Validation succeeds#}
{#            }#}
{#        }#}







{#        // Fonction pour afficher les erreurs en rouge#}
{#        function showError(input, message) {#}
{#            var errorDiv = input.nextElementSibling;#}
{#            if (!errorDiv || !errorDiv.classList.contains('error-message')) {#}
{#                errorDiv = document.createElement('div');#}
{#                errorDiv.className = 'error-message';#}
{#                input.parentNode.insertBefore(errorDiv, input.nextElementSibling);#}
{#            }#}
{#            errorDiv.textContent = message;#}
{#            errorDiv.style.color = 'red'; // Couleur rouge pour les messages d'erreur#}
{#        }#}

{#        // Fonction pour masquer les erreurs#}
{#        function hideError(input) {#}
{#            var errorDiv = input.nextElementSibling;#}
{#            if (errorDiv && errorDiv.classList.contains('error-message')) {#}
{#                errorDiv.textContent = '';#}
{#            }#}
{#        }#}




{#        // Fonction de validation du formulaire#}
{#        function validateForm() {#}
{#            // Valider chaque champ du formulaire#}
{#            var nomValid = validateType();#}
{#            var amountValid = validateAmount();#}
{#            var dateValid = validateDate()#}

{#            // Retourner true si tous les champs sont valides, sinon retourner false#}
{#            return nomValid && amountValid  ;#}
{#        }});#}




{#</script>#}